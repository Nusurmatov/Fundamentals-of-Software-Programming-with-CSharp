If you want to take up programming seriously, you’ve come across the right 
book. For real! This is the book with which you can make your 
first steps in programming. It will give a flying finish to your long 
journey into learning modern programming languages and software development technologies. This book teaches 
the fundamental principles and concepts of programming, which have not changed significantly in 
the past 15 years. Do not hesitate to read this book even if 
C# is not the language you would like to pursue. Whatever language you 
move on to, the knowledge we will give you here will stick, because 
this book will teach you to think like programmers. We will show you 
and teach you how to write programs for solving practical algorithmic problems, form 
the skills in you to come up with (and implement) algorithms, and use 
various data structures. As improbable as it might seem to you, the basic 
principles of writing computer programs have not changed all that much in the 
past 15 years. Programming languages change, technologies get modernized, integrated development environments get 
more and more advanced but the fundamental principles of programming remain the same. 
When beginners learn to think algorithmically, and then learn to divide a problem 
instinctively into a series of steps to solve it, as well as when 
they learn to select the appropriate data structures and write high-quality programming code 
that is when they become programmers. Once you acquire these skills, you can 
easily learn new languages and various technologies – like Web programming, HTML5 and 
JavaScript, mobile development, databases and SQL, XML, REST, ASP.NET, Java EE, Python, Ruby 
and hundreds more. About the Book This book is designed specifically to teach 
you to think like a programmer and the C# language is just a 
tool that can be replaced by any other modern programming languages, such as 
Java, C++, PHP or Python. This is a book on programming, not a 
book on C#! Please Excuse Us for the Bugs in the Translation! This 
book was originally written in Bulgarian language by a large team of volunteer 
software engineers and later translated into English. None of the authors, translators, editors 
and the other contributors is a native English speaker so you might find 
many mistakes and imprecise translation. Please, excuse us! Over 70 people have participated 
in this project (mostly Bulgarians): authors, editors, translators, correctors, bug submitters, etc. and14 
Fundamentals of Computer Programming with C# still the quality could be improved. The 
entire team congratulates you on your choice to read this book and we 
believe the content in it is more important that the small mistakes and 
inaccuracies you might find. Enjoy! Who Is This Book Aimed At? This book 
is best suited for beginners. It is intended for anyone who so far 
has not engaged seriously in programming and would like to begin doing it. 
This book starts from scratch and introduces you step by step into the 
fundamentals of programming. It won’t teach you absolutely everything you might need for 
becoming a software engineer and working at a software company, but it will 
lay the groundwork on which you can build up technological knowledge and skills, 
and through them you will be able to turn programming into your profession. 
If you’ve never written a computer program, don’t worry. There is always a 
first time. In this book we will teach you how to program from 
scratch. We do not expect any previous knowledge or abilities. All you need 
is some basic computer literacy and a desire to take up programming. The 
rest you will learn from the book. If you can already write simple 
programs or if you have studied programming at school or in college, or 
you’ve coded with friends, do not assume you know everything! Read this book 
and you’ll become aware of how many things you’ve missed. This book is 
indeed for beginners, but it teaches concepts and skills that even experienced professional 
programmers lack. Software companies are riddled with a shocking amount of self-taught amateurs 
who, despite having programmed on a salary for years, have no grasp of 
the fundamentals of programming and have no idea what a hash table is, 
how polymorphism works and how to work with bitwise operations. Don’t be like 
them! Learn the basics of programming first and then the technologies. Otherwise you 
risk having your programming skills crippled, more or less, for years, if not 
for life. If, on the other hand, you have programming experience, examine this 
book in details and see if you are familiar with all subjects we 
have covered, in order to decide whether it is for you or not. 
Take a close look especially at the chapters "Data Structures and Algorithms Complexity", 
"Object-Oriented Programming Principles", "Methodology of Problem Solving" and "High-Quality Programming Code". It is 
very likely that, even if you have several years of experience, you might 
not be able to work well with data structures; you might not be 
able to evaluate the complexity of an algorithm; you might not have mastered 
in depth the concepts of object-oriented programming (including UML and design patterns); and 
you might not be acquainted with the best practices for writing high-quality programming 
code. These are very important topics that are not covered in all books 
on programming, so don’t skip them!Preface 15 Previous Knowledge Is Not Required! In 
this book we do not expect any previous programming knowledge from the readers. 
It is not necessary for you to have studied information technology or computer 
science, in order to read and comprehend the book content. The book starts 
from scratch and gradually gets you involved in programming. All technical terms you 
will come across will have been explained beforehand and it is not necessary 
for you to know them from other sources. If you don’t know what 
a compiler, debugger, integrated development environment, variable, array, loop, console, string, data structure, 
algorithm, algorithm complexity, class or object are, don’t be alarmed. From this book, 
you will learn all these terms and many more and gradually get accustomed 
to using them constantly in your everyday work. Just read the book consistently 
and do the exercises. Certainly, if, after all, you do have prior knowledge 
in computer science and information technologies, they will by all means be of 
use to you. If, at university, you major in the field of computer 
science or if you study information technology at school, this will only help 
you, but it is not a must. If you major in tourism, law 
or other discipline that has little in common with computer technology, you could 
still become a good programmer, as long as you have the desire. The 
software industry is full of good developers without a computer science or related 
degree. It is expected for you to have basic computer literacy, since we 
would not be explaining what a file, hard disk and network adapter is, 
nor how to move the mouse or how to write on a keyboard. 
We expect you to know how to work with a computer and how 
to use the Internet. It is recommended that the readers have at least 
some basic knowledge of English. The entire documentation you will be using every 
day and almost all of the websites on programming you would be reading 
at all times are in English. In the profession of a programmer, English 
is absolutely essential. The sooner you learn it, the better. We hope that 
you already speak English; otherwise how do you read this text? Make no 
illusion you can become a programmer without learning even a little English! This 
is simply a naive expectation. If you don’t speak English, complete a course 
of some sort and then finish reading technical literature, make note of any 
unfamiliar words and learn them. You will see for yourselves that Technical English 
is easy to learn and it doesn’t take much time. What Is the 
Scope of This Book? This book covers the fundamentals of programming. It will 
teach you how to define and use variables, how to work with primitive 
data structures (such as numbers), how to organize logical statements, conditional statements and16 
Fundamentals of Computer Programming with C# loops, how to print on the console, 
how to use arrays, how to work with numeral systems, how to define 
and use methods, and how to create and use objects. Along with the 
basic programming knowledge, this book will help you understand more complicated concepts such 
as string processing, exception handling, using complex data structures (like trees and hash 
tables), working with text files, defining custom classes and working with LINQ queries. 
The concepts of object-oriented programming (OOP) – an established approach in modern software 
development – will be covered in depth. Finally, you’ll be faced with the 
practices for writing high-quality programs and solving real-world programming problems. This book presents 
a complete methodology for solving programming problems, as well as algorithmic problems in 
general, and shows how to implement it with a few sample subjects and 
programming exams. This is something you will not find in any other book 
on programming! What Will This Book Not Teach You? This book will not 
award you the profession "software engineer"! This book won’t teach you how to 
use the entire .NET platform, how to work with databases, how to create 
dynamic web sites and develop mobile applications, how to create window-based graphical user 
interface (GUI) and rich Internet applications (RIA). You won’t learn how to develop 
complex software applications and systems like Skype, Firefox, MS Word or social networks 
like Facebook and retail sites like Amazon.com. And no other single book will. 
These kinds of projects require many, many years of work and experience and 
the knowledge in this book is just a wonderful beginning for the future 
programmer geek. From this book, you won’t learn software engineering, team work and 
you won’t be able to prepare for working on real projects in a 
software company. In order to learn all of this, you will need a 
few more books and extra courses, but do not regret the time you 
will spend on this book. You are making the right choice by starting 
with the fundamentals of programming rather than directly with Web development, mobile applications 
and databases. This gives you the opportunity to become a master programmer who 
has indepth knowledge of programming and technology. After you acquire the fundamentals of 
programming, it will become much easier for you to read and learn databases 
and web applications, and you will understand what you read much easier and 
in greater depth rather than if you directly begin learning SQL, ASP.NET, AJAX, 
XAML or WinRT. Some of your colleagues directly begin programming with Web or 
mobile applications and databases without knowing what an array, a list or hash 
table is. Do not envy them! They have set out to do it 
the hard way, backwards. They will learn to make low-quality websites with PHP 
and MySQL, but they will find it infinitely difficult to become real professionals. 
You, too, will learn web technologies and databases, but before you take them 
up, learn how to program! This is much more important. Learning onePreface 17 
technology or another is very easy once you know the basics, when you 
can think algorithmically and you know how to tackle programming problems. Starting to 
program with web applications or/and databases is just as incorrect as studying up 
a foreign language from some classical novel rather than from the alphabet and 
a textbook for beginners. It is not impossible, but if you lack the 
basics, it is much more difficult. It is highly-probable that you would end 
up lacking vital fundamental knowledge and being the laughing-stock of your colleagues/peers. 
