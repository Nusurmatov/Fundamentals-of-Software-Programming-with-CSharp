/* (Easier) Ex7 - Problem Statement:
Write a program that takes a positive integer from the console and prints
the square root of this integer. If the input is negative or invalid print
"Invalid Number" in the console. In all cases print "Good Bye".
*/

Console.Write("Enter a positive integer: ");

try
{
    double number = Convert.ToDouble(Console.ReadLine());
    Console.WriteLine((number < 0) ? "Invalid Input...!" : $"Square Root: {Math.Sqrt(number)}");
}
catch (Exception)
{
    Console.WriteLine("Invalid Input...!");
}
finally
{
    Console.WriteLine("Good Bye...");
}

/* Input/Output:
Enter a positive integer: dyjt
Invalid Input...!
Good Bye... 
Enter a positive integer: 4
Square Root: 2
Good Bye...
Enter a positive integer: -7
Invalid Input...!
Good Bye...    
*/


/* (Easier) Ex8 - Problem Statement:
Write a method ReadNumber(int start, int end) that reads an integer
from the console in the range [start…end]. In case the input integer is
not valid or it is not in the required range throw appropriate exception.
Using this method, write a program that takes 10 integers a1, a2, …, a10
such that 1 < a1 < … < a10 < 100.
*/

class InvalidNumberException: Exception
{
    public override string Message { get; } = "Invalid Number entered";

    public InvalidNumberException()
    {

    }

    public InvalidNumberException(string message)
    {
        this.Message = message;
    }
}

class ReadIntegers
{
    static void Main()
    {
        int start = 1, end = 100;
        ReadNumber(start, end);
    }

    static void ReadNumber(int start, int end)
    {
        Console.WriteLine($"Enter 10 numbers in the range ({start}, {end}) (exculusive). ");
        Console.WriteLine("Numbers must be enterd in ascending order and in one line separated with a single whitespase. ");
        Console.Write("e.g. 3 4 15 27 48 57 65 74 51 99. Now enter: ");
        
        string input = Console.ReadLine() ?? "null";
        if (input == "null")
        {
            throw new NullReferenceException("Nothing entered");
        }
            
        List<int> numbers = new List<int>(10);
        foreach (var item in input.Split())
        {
            int number;
            if (int.TryParse(item, out number))
            {
                numbers.Add(number);
            }
            else
            {
                Console.WriteLine(item == " " ? $"Cannot convet {item} to integer!" : "Pay attention to the number of whitespaces");
            }
        }

        if (numbers.Count != 10)
        {
            throw new InvalidNumberException($"The count of entered numbers is not 10, but {numbers.Count}!");
        }

        for (int i = 1; i < 10; i++)
        {
            if (numbers[i] < numbers[i-1])
            {
                throw new InvalidNumberException("Numbers entered are not in ascending order");
            }
        }


    }
}

/* Input/Output:
Enter 10 numbers in the range (1, 100) (exculusive).
Numbers must be enterd in ascending order and in one line separated with a single whitespase.
e.g. 3 4 15 27 48 57 65 74 51 99. Now enter:  464 646 4 64   46
Pay attention to the number of whitespaces
Pay attention to the number of whitespaces
Pay attention to the number of whitespaces
Unhandled exception. InvalidNumberException: The count of entered numbers is not 10, but 5!
   at ReadIntegers.ReadNumber(Int32 start, Int32 end) in C:\Users\Xusniddin\Desktop\Khusniddin\IT\DotNet Development\FofCP with C#\Exers\12.ExHan\Problems\Program.cs:line 60
   at ReadIntegers.Main() in C:\Users\Xusniddin\Desktop\Khusniddin\IT\DotNet Development\FofCP with C#\Exers\12.ExHan\Problems\Program.cs:line 29
PS C:\Users\Xusniddin\Desktop\Khusniddin\IT\DotNet Development\FofCP with C#\Exers\12.ExHan\Problems> dotnet run
Enter 10 numbers in the range (1, 100) (excasceulusive).
Numbers must be enterd in ascending order and in one line separated with a single whitespase.
e.g. 3 4 15 27 48 57 65 74 51 99. Now enter:
Pay attention to the number of whitespaces
Unhandled exception. InvalidNumberException: The count of entered numbers is not 10, but 0!
   at ReadIntegers.ReadNumber(Int32 start, Int32 end) in C:\Users\Xusniddin\Desktop\Khusniddin\IT\DotNet Development\FofCP with C#\Exers\12.ExHan\Problems\Program.cs:line 60
   at ReadIntegers.Main() in C:\Users\Xusniddin\Desktop\Khusniddin\IT\DotNet Development\FofCP with C#\Exers\12.ExHan\Problems\Program.cs:line 29
PS C:\Users\Xusniddin\Desktop\Khusniddin\IT\DotNet Development\FofCP with C#\Exers\12.ExHan\Problems> dotnet run
Enter 10 numbers in the range (1, 100) (exculusive). 
Numbers must be enterd in ascending order and in one line separated with a single whitespase. 
e.g. 3 4 15 27 48 57 65 74 51 99. Now enter: 4 5 7 8 9 4 5 8 7 9
Unhandled exception. InvalidNumberException: Numbers entered are not in ascending order
   at ReadIntegers.ReadNumber(Int32 start, Int32 end) in C:\Users\Xusniddin\Desktop\Khusniddin\IT\DotNet Development\FofCP with C#\Exers\12.ExHan\Problems\Program.cs:line 67
   at ReadIntegers.Main() in C:\Users\Xusniddin\Desktop\Khusniddin\IT\DotNet Development\FofCP with C#\Exers\12.ExHan\Problems\Program.cs:line 29   
*/


/* (Easier) Ex9 - Problem Statement:
Write a method that takes as a parameter the name of a text file, reads
the file and returns its content as string. What should the method
do if and exception is thrown?
*/

using System.Text;

string fileName = "Text.txt"; 

Console.WriteLine("Following lines are read form Text.txt:");
StreamReader reader = new StreamReader(fileName);
StringBuilder text = new StringBuilder();

try
{
    // while (!reader.EndOfStream)
    // {
    //     text.AppendLine(reader.ReadLine());
    // }

    text.AppendLine(reader.ReadToEnd());
    Console.WriteLine(text);
}
catch (IOException e)
{
    Console.WriteLine(e.Message);
}
finally
{
    reader.Close();   
}

Console.WriteLine("In the following lines, exception will be thrown:");

try
{
    text.Clear();
    
    using (reader = new StreamReader("texts.txt"))
    {
        while (!reader.EndOfStream)
        {
            text.AppendLine(reader.ReadLine());
        }

        Console.WriteLine(text);
    }
}
catch (FileNotFoundException e)
{
    throw new FileNotFoundException(e.Message);
}
catch (EndOfStreamException e)
{
    throw new EndOfStreamException(e.Message);
}
catch (IOException e)
{
    throw new IOException(e.Message);
}

/* Input/Output:
Following lines are read form Text.txt:
This text comes from Text.txt file in the Problems folder. 
I used StreamReader to read this particular line, and      
text as a whole. I am now doing Exercise 9 in Chapter 12 - 
Exception Handling.

In the following lines, exception will be thrown:
Unhandled exception. System.IO.IOException: Could not find file 'C:\Users\Xusniddin\Desktop\Khusniddin\IT\DotNet Development\FofCP with C#\Exers\12.ExHan\Problems\texts.txt'.
   at Program.<Main>$(String[] args) in C:\Users\Xusniddin\Desktop\Khusniddin\IT\DotNet Development\FofCP with C#\Exers\12.ExHan\Problems\Program.cs:line 51
*/